// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RMS.Infrastructure;

#nullable disable

namespace RMS.Infrastructure.Migrations
{
    [DbContext(typeof(RMSDbContext))]
    [Migration("20250608214612_seeddatacopon")]
    partial class seeddatacopon
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RMS.Core.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            IsActive = false,
                            Name = "Appetizers"
                        },
                        new
                        {
                            CategoryId = 2,
                            Description = "Main dishes including burgers and pizzas",
                            IsActive = false,
                            Name = "Main Dishes"
                        },
                        new
                        {
                            CategoryId = 3,
                            IsActive = false,
                            Name = "Desserts"
                        },
                        new
                        {
                            CategoryId = 4,
                            Description = "Beverages including soft drinks and juices",
                            IsActive = false,
                            Name = "Drinks"
                        });
                });

            modelBuilder.Entity("RMS.Core.Models.Coupon", b =>
                {
                    b.Property<int>("CouponId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CouponId"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("DiscountPercentage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.HasKey("CouponId");

                    b.ToTable("Coupon");

                    b.HasData(
                        new
                        {
                            CouponId = 1,
                            Code = "HAPPYHOUR20",
                            DiscountPercentage = 20m,
                            IsActive = true
                        },
                        new
                        {
                            CouponId = 2,
                            Code = "BIGORDER10",
                            DiscountPercentage = 10m,
                            IsActive = true
                        },
                        new
                        {
                            CouponId = 3,
                            Code = "STUDENT10",
                            DiscountPercentage = 10m,
                            IsActive = true
                        },
                        new
                        {
                            CouponId = 4,
                            Code = "SENIOR15",
                            DiscountPercentage = 15m,
                            IsActive = true
                        });
                });

            modelBuilder.Entity("RMS.Core.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerId"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HashedPassword")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustomerId");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            CustomerId = 1,
                            Email = "aya.khaled@example.com",
                            Name = "Aya Khaled",
                            PhoneNumber = "0100000001"
                        },
                        new
                        {
                            CustomerId = 2,
                            Email = "doha.ezzat@example.com",
                            Name = "Doha Ezzat",
                            PhoneNumber = "0100000002"
                        },
                        new
                        {
                            CustomerId = 3,
                            Email = "jameela.abdulrahman@example.com",
                            Name = "Jameela Abdulrahman",
                            PhoneNumber = "0100000003"
                        },
                        new
                        {
                            CustomerId = 4,
                            Email = "shimaa.mohamed@example.com",
                            Name = "Shimaa Mohamed",
                            PhoneNumber = "0100000004"
                        });
                });

            modelBuilder.Entity("RMS.Core.Models.MenuItem", b =>
                {
                    b.Property<int>("MenuItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MenuItemId"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("DailyOrderCount")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PreparationTimeInMinutes")
                        .HasColumnType("int");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("MenuItemId");

                    b.HasIndex("CategoryId");

                    b.ToTable("MenuItems");

                    b.HasData(
                        new
                        {
                            MenuItemId = 1,
                            CategoryId = 1,
                            DailyOrderCount = 0,
                            IsAvailable = true,
                            Name = "Spring Rolls",
                            PreparationTimeInMinutes = 0,
                            UnitPrice = 5.99m
                        },
                        new
                        {
                            MenuItemId = 2,
                            CategoryId = 1,
                            DailyOrderCount = 0,
                            IsAvailable = true,
                            Name = "Caesar Salad",
                            PreparationTimeInMinutes = 0,
                            UnitPrice = 7.99m
                        },
                        new
                        {
                            MenuItemId = 3,
                            CategoryId = 2,
                            DailyOrderCount = 0,
                            IsAvailable = true,
                            Name = "Grilled Chicken",
                            PreparationTimeInMinutes = 0,
                            UnitPrice = 12.99m
                        },
                        new
                        {
                            MenuItemId = 4,
                            CategoryId = 3,
                            DailyOrderCount = 0,
                            IsAvailable = true,
                            Name = "Chocolate Cake",
                            PreparationTimeInMinutes = 0,
                            UnitPrice = 4.99m
                        },
                        new
                        {
                            MenuItemId = 5,
                            CategoryId = 4,
                            DailyOrderCount = 0,
                            IsAvailable = true,
                            Name = "Coca Cola",
                            PreparationTimeInMinutes = 0,
                            UnitPrice = 1.99m
                        },
                        new
                        {
                            MenuItemId = 6,
                            CategoryId = 3,
                            DailyOrderCount = 0,
                            IsAvailable = true,
                            Name = "Cheesecake",
                            PreparationTimeInMinutes = 0,
                            UnitPrice = 6.50m
                        },
                        new
                        {
                            MenuItemId = 7,
                            CategoryId = 4,
                            DailyOrderCount = 0,
                            IsAvailable = true,
                            Name = "Mango Juice",
                            PreparationTimeInMinutes = 0,
                            UnitPrice = 3.99m
                        },
                        new
                        {
                            MenuItemId = 8,
                            CategoryId = 2,
                            DailyOrderCount = 0,
                            IsAvailable = true,
                            Name = "Spaghetti Carbonara",
                            PreparationTimeInMinutes = 0,
                            UnitPrice = 10.99m
                        },
                        new
                        {
                            MenuItemId = 9,
                            CategoryId = 2,
                            DailyOrderCount = 0,
                            IsAvailable = true,
                            Name = "Vegetable Stir Fry",
                            PreparationTimeInMinutes = 0,
                            UnitPrice = 8.99m
                        });
                });

            modelBuilder.Entity("RMS.Core.Models.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"));

                    b.Property<int?>("CouponId")
                        .HasColumnType("int");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("DeliveryAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeliveryTime")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("DiscountAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrderStatus")
                        .HasColumnType("int");

                    b.Property<DateTime?>("OrderTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("OrderType")
                        .HasColumnType("int");

                    b.Property<int?>("StaffId")
                        .HasColumnType("int");

                    b.Property<int?>("TableId")
                        .HasColumnType("int");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalBeforeDiscounts")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("OrderId");

                    b.HasIndex("CouponId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("StaffId");

                    b.HasIndex("TableId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            OrderId = 4,
                            CustomerId = 1,
                            DiscountAmount = 0m,
                            OrderStatus = 0,
                            OrderType = 0,
                            Total = 20.00m,
                            TotalBeforeDiscounts = 20.00m
                        },
                        new
                        {
                            OrderId = 2,
                            CustomerId = 2,
                            DiscountAmount = 0m,
                            OrderStatus = 2,
                            OrderType = 1,
                            Total = 15.00m,
                            TotalBeforeDiscounts = 15.00m
                        },
                        new
                        {
                            OrderId = 3,
                            CustomerId = 3,
                            DiscountAmount = 0m,
                            OrderStatus = 3,
                            OrderType = 2,
                            Total = 30.00m,
                            TotalBeforeDiscounts = 30.00m
                        },
                        new
                        {
                            OrderId = 1,
                            CustomerId = 1,
                            DiscountAmount = 0m,
                            Note = "No onions",
                            OrderStatus = 0,
                            OrderType = 0,
                            TableId = 1,
                            Total = 0m,
                            TotalBeforeDiscounts = 0m
                        },
                        new
                        {
                            OrderId = 5,
                            CustomerId = 2,
                            DeliveryAddress = "123 Main St, City, Country",
                            DiscountAmount = 0m,
                            Note = "Please ring the bell",
                            OrderStatus = 0,
                            OrderType = 2,
                            Total = 0m,
                            TotalBeforeDiscounts = 0m
                        });
                });

            modelBuilder.Entity("RMS.Core.Models.OrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("MenuItemId")
                        .HasColumnType("int");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MenuItemId");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderItems");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            MenuItemId = 1,
                            OrderId = 1,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 2,
                            MenuItemId = 3,
                            OrderId = 1,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 3,
                            MenuItemId = 2,
                            OrderId = 2,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 4,
                            MenuItemId = 5,
                            OrderId = 2,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 5,
                            MenuItemId = 4,
                            OrderId = 3,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 6,
                            MenuItemId = 6,
                            OrderId = 3,
                            Quantity = 1
                        });
                });

            modelBuilder.Entity("RMS.Core.Models.Reservation", b =>
                {
                    b.Property<int>("ReservationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReservationId"));

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int>("DurationInMinutes")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfGuests")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReservationCreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("ReservationStatus")
                        .HasColumnType("int");

                    b.Property<string>("SpecialRequests")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StaffId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("TableId")
                        .HasColumnType("int");

                    b.HasKey("ReservationId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("StaffId");

                    b.HasIndex("TableId");

                    b.ToTable("Reservations");

                    b.HasData(
                        new
                        {
                            ReservationId = 3,
                            CustomerId = 1,
                            DurationInMinutes = 60,
                            NumberOfGuests = 4,
                            ReservationCreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReservationStatus = 1,
                            SpecialRequests = "Window seat",
                            StaffId = 1,
                            StartTime = new DateTime(2025, 6, 7, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            TableId = 1
                        },
                        new
                        {
                            ReservationId = 2,
                            CustomerId = 2,
                            DurationInMinutes = 90,
                            NumberOfGuests = 2,
                            ReservationCreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReservationStatus = 0,
                            SpecialRequests = "Quiet area",
                            StaffId = 2,
                            StartTime = new DateTime(2025, 6, 7, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            TableId = 2
                        },
                        new
                        {
                            ReservationId = 1,
                            CustomerId = 2,
                            DurationInMinutes = 90,
                            NumberOfGuests = 2,
                            ReservationCreatedAt = new DateTime(2025, 6, 8, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            ReservationStatus = 1,
                            SpecialRequests = "Window seat please",
                            StartTime = new DateTime(2025, 6, 7, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            TableId = 2
                        });
                });

            modelBuilder.Entity("RMS.Core.Models.Staff", b =>
                {
                    b.Property<int>("StaffId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StaffId"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HashedPassword")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Position")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StaffId");

                    b.ToTable("Staff");

                    b.HasData(
                        new
                        {
                            StaffId = 1,
                            Email = "karim.elshenawy@rms.com",
                            Name = "Karim ElShenawy",
                            PhoneNumber = "0100000001",
                            Position = "Waiter"
                        },
                        new
                        {
                            StaffId = 2,
                            Email = "laila.hassan@rms.com",
                            Name = "Laila Hassan",
                            PhoneNumber = "0100000001",
                            Position = "Chef"
                        },
                        new
                        {
                            StaffId = 3,
                            Email = "mohamed.tarek@rms.com",
                            Name = "Mohamed Tarek",
                            PhoneNumber = "0100000001",
                            Position = "Manager"
                        },
                        new
                        {
                            StaffId = 4,
                            Email = "sara.mostafa@rms.com",
                            Name = "Sara Mostafa",
                            PhoneNumber = "0100000001",
                            Position = "Cashier"
                        });
                });

            modelBuilder.Entity("RMS.Core.Models.Table", b =>
                {
                    b.Property<int>("TableId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TableId"));

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<int>("TableNumber")
                        .HasColumnType("int");

                    b.HasKey("TableId");

                    b.ToTable("Tables");

                    b.HasData(
                        new
                        {
                            TableId = 1,
                            Capacity = 4,
                            IsAvailable = false,
                            TableNumber = 1
                        },
                        new
                        {
                            TableId = 2,
                            Capacity = 2,
                            IsAvailable = false,
                            TableNumber = 2
                        },
                        new
                        {
                            TableId = 3,
                            Capacity = 6,
                            IsAvailable = true,
                            TableNumber = 3
                        },
                        new
                        {
                            TableId = 4,
                            Capacity = 8,
                            IsAvailable = true,
                            TableNumber = 4
                        });
                });

            modelBuilder.Entity("RMS.Core.Models.MenuItem", b =>
                {
                    b.HasOne("RMS.Core.Models.Category", "Category")
                        .WithMany("MenuItems")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("RMS.Core.Models.Order", b =>
                {
                    b.HasOne("RMS.Core.Models.Coupon", "Coupon")
                        .WithMany()
                        .HasForeignKey("CouponId");

                    b.HasOne("RMS.Core.Models.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId");

                    b.HasOne("RMS.Core.Models.Staff", "Staff")
                        .WithMany("AssignedOrders")
                        .HasForeignKey("StaffId");

                    b.HasOne("RMS.Core.Models.Table", "Table")
                        .WithMany()
                        .HasForeignKey("TableId");

                    b.Navigation("Coupon");

                    b.Navigation("Customer");

                    b.Navigation("Staff");

                    b.Navigation("Table");
                });

            modelBuilder.Entity("RMS.Core.Models.OrderItem", b =>
                {
                    b.HasOne("RMS.Core.Models.MenuItem", "MenuItem")
                        .WithMany("OrderItems")
                        .HasForeignKey("MenuItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RMS.Core.Models.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MenuItem");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("RMS.Core.Models.Reservation", b =>
                {
                    b.HasOne("RMS.Core.Models.Customer", "Customer")
                        .WithMany("Reservations")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RMS.Core.Models.Staff", "Staff")
                        .WithMany("AssignedReservations")
                        .HasForeignKey("StaffId");

                    b.HasOne("RMS.Core.Models.Table", "Table")
                        .WithMany("Reservations")
                        .HasForeignKey("TableId");

                    b.Navigation("Customer");

                    b.Navigation("Staff");

                    b.Navigation("Table");
                });

            modelBuilder.Entity("RMS.Core.Models.Category", b =>
                {
                    b.Navigation("MenuItems");
                });

            modelBuilder.Entity("RMS.Core.Models.Customer", b =>
                {
                    b.Navigation("Orders");

                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("RMS.Core.Models.MenuItem", b =>
                {
                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("RMS.Core.Models.Order", b =>
                {
                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("RMS.Core.Models.Staff", b =>
                {
                    b.Navigation("AssignedOrders");

                    b.Navigation("AssignedReservations");
                });

            modelBuilder.Entity("RMS.Core.Models.Table", b =>
                {
                    b.Navigation("Reservations");
                });
#pragma warning restore 612, 618
        }
    }
}
